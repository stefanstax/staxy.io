generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Feature {
  identifier  String  @id @unique @default(cuid())
  title       String
  description String
  image       String
  parent      String?
  category    String?
  extraClass  String
  order       Int     @default(autoincrement())
}

model Faq {
  identifier String @id @unique @default(cuid())
  question   String
  answer     String
}

model Step {
  identifier  String  @id @unique @default(cuid())
  title       String
  description String
  highlight   String
  mediaSrc    String
  mediaFirst  Boolean
  endBlock    Boolean
  order       Int     @unique @default(autoincrement())
}

model Company {
  identifier String @id @unique @default(cuid())
  title      String
  image      String
  order      Int    @unique @default(autoincrement())
}

model Contact {
  identifier String @id @unique @default(cuid())
  name       String
  email      String @unique
}

model RestrictedPath {
  identifier String  @id @unique @default(cuid())
  path       String
  locked     Boolean @default(false)
}
